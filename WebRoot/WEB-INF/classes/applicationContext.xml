<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
            http://www.springframework.org/schema/context
			http://www.springframework.org/schema/context/spring-context-4.1.xsd
			http://www.springframework.org/schema/aop
            http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
            http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
           ">
     
	<context:component-scan base-package="com.bctc" /><!-- 如果扫描到有@Component @Controller@Service等这些注解的类，则把这些类注册为bean  -->
	<context:annotation-config /><!-- 前提是有这个bean //@Autowired  //自动装配   ：参数前 @Qualifier("userDAO") 注入某个bean -->
	 <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<value>classpath:jdbc.properties</value>
		</property>
	</bean>
	<!-- 采用c3p0数据源 这个是在企业中用的比较多的一个数据源 -->  
	<!-- destroy-method="close"的作用是当数据库连接不使用的时候，就把该连接重新放到数据池中，方便下次使用调用 -->  
	<bean id="dataSource" destroy-method="close" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<!--初始化时获取三个连接，取值应在minPoolSize与maxPoolSize之间。Default: 0 -->
		<property name="initialSize" value="2"></property>
	</bean>
	<!-- 将Hibernate中的事物交给Spring进行接管 --> 
	<bean id="sessionFactory"	class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
	 	<property name="dataSource" ref="dataSource" />
	 	<property name="hibernateProperties">
	 		<props>								<!-- hibernate 配置 -->
	 			<prop key="hibernate.show_sql">false</prop>
	 			<prop key="hibernate.hbm2ddl.auto">update</prop>
	 		</props>
	 	</property>	 	
	 	<property name="packagesToScan">
	 		<list> <value>com.bctc.entity</value>  </list><!-- 自动扫描配置实体类 -->
	 	</property>
	 </bean>
	 <!-- 配置使用基于Hibernate的事务管理器 -->  
	 <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
	 	<property name="sessionFactory" ref="sessionFactory" />
	 </bean> <!-- 注解事务管理 -->
	 <tx:annotation-driven transaction-manager="transactionManager" />
	 <!-- xml声明事务 -->
	<aop:config>
		<aop:pointcut id="bussinessService"  expression="execution(public * com.bctc.service..*.*(..))" />
		<aop:advisor pointcut-ref="bussinessService" advice-ref="txAdvice"/>		
	</aop:config>	 
	<tx:advice id="txAdvice" transaction-manager="transactionManager"> 
		<tx:attributes>
			<tx:method name="get*" read-only="true"/>
			<tx:method name="*" />
		</tx:attributes>
	</tx:advice>
	<!-- 模板 -->
	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate4.HibernateTemplate" >
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	 
</beans>
	 